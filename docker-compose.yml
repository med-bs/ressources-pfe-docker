version: '3.7'
services:
  # Backend service
  fineractmysql:
    container_name: fineractmysql
    hostname: fineractmysql
    image: mariadb:10.6
    volumes:
      - ./fineract-db/server_collation.cnf:/etc/mysql/conf.d/server_collation.cnf
      - ./fineract-db/data:/var/lib/mysql
      - ./fineract-db/docker:/docker-entrypoint-initdb.d:Z,ro
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysql
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "--password=mysql"
        ]
      timeout: 10s
      retries: 10
    ports:
      - "3306:3306"
    networks:
      - cdc

  fineract-server:
    container_name: "fineract-server"
    image: apache/fineract
    volumes:
      - ./fineract-provider/build/data:/data
    healthcheck:
      test:
        [
          "CMD",
          'sh',
          '-c',
          'echo -e "Checking for the availability of Fineract server deployment"; while ! nc -z "fineract-server" 8443; do sleep 1; printf "-"; done; echo -e " >> Fineract server has started";'
        ]
      timeout: 10s
      retries: 10
    ports:
      - 8443:8443
    depends_on:
      fineractmysql:
        condition: service_healthy
    environment:

      - fineract_tenants_driver=org.mariadb.jdbc.Driver
      - fineract_tenants_url=jdbc:mariadb://fineractmysql:3306/fineract_tenants
      - fineract_tenants_uid=root
      - fineract_tenants_pwd=mysql
      # NOTE: node aware scheduler
      - FINERACT_NODE_ID=1
      # NOTE: env vars prefixed "FINERACT_HIKARI_*" are used to configure the database connection pool
      - FINERACT_HIKARI_DRIVER_SOURCE_CLASS_NAME=org.mariadb.jdbc.Driver
      - FINERACT_HIKARI_JDBC_URL=jdbc:mariadb://fineractmysql:3306/fineract_tenants
      - FINERACT_HIKARI_USERNAME=root
      - FINERACT_HIKARI_PASSWORD=mysql
      # ... following variables are optional; "application.properties" contains reasonable defaults (same as here)
      - FINERACT_HIKARI_MINIMUM_IDLE=3
      - FINERACT_HIKARI_MAXIMUM_POOL_SIZE=10
      - FINERACT_HIKARI_IDLE_TIMEOUT=60000
      - FINERACT_HIKARI_CONNECTION_TIMEOUT=20000
      - FINERACT_HIKARI_TEST_QUERY=SELECT 1
      - FINERACT_HIKARI_AUTO_COMMIT=true
      - FINERACT_HIKARI_DS_PROPERTIES_CACHE_PREP_STMTS=true
      - FINERACT_HIKARI_DS_PROPERTIES_PREP_STMT_CACHE_SIZE=250
      - FINERACT_HIKARI_DS_PROPERTIES_PREP_STMT_CACHE_SQL_LIMIT=2048
      - FINERACT_HIKARI_DS_PROPERTIES_USE_SERVER_PREP_STMTS=true
      - FINERACT_HIKARI_DS_PROPERTIES_USE_LOCAL_SESSION_STATE=true
      - FINERACT_HIKARI_DS_PROPERTIES_REWRITE_BATCHED_STATEMENTS=true
      - FINERACT_HIKARI_DS_PROPERTIES_CACHE_RESULT_SET_METADATA=true
      - FINERACT_HIKARI_DS_PROPERTIES_CACHE_SERVER_CONFIGURATION=true
      - FINERACT_HIKARI_DS_PROPERTIES_ELIDE_SET_AUTO_COMMITS=true
      - FINERACT_HIKARI_DS_PROPERTIES_MAINTAIN_TIME_STATS=false
      - FINERACT_HIKARI_DS_PROPERTIES_LOG_SLOW_QUERIES=true
      - FINERACT_HIKARI_DS_PROPERTIES_DUMP_QUERIES_IN_EXCEPTION=true
      # NOTE: env vars prefixed "FINERACT_DEFAULT_TENANTDB_*" are used to create the default tenant database  fineract_default
      - FINERACT_DEFAULT_TENANTDB_HOSTNAME=fineractmysql
      - FINERACT_DEFAULT_TENANTDB_PORT=3306
      - FINERACT_DEFAULT_TENANTDB_UID=root
      - FINERACT_DEFAULT_TENANTDB_PWD=mysql
      # - FINERACT_DEFAULT_TENANTDB_CONN_PARAMS=
      - FINERACT_DEFAULT_TENANTDB_TIMEZONE=UTC
      - FINERACT_DEFAULT_TENANTDB_IDENTIFIER=default
      - FINERACT_DEFAULT_TENANTDB_NAME=fineract_default
      - FINERACT_DEFAULT_TENANTDB_DESCRIPTION=Default Demo Tenant
      - JAVA_TOOL_OPTIONS="-Xmx1G"
    networks:
      - cdc

  # Swagger api doc url
  # https://localhost:8443/fineract-provider/swagger-ui/index.html#/


  zookeeper:
    image: debezium/zookeeper:1.6
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    networks:
      - cdc

  kafka:
    image: debezium/kafka:1.6
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - cdc

  connect:
    image: debezium/connect:1.6
    ports:
      - 8083:8083
    links:
      - kafka
      - fineractmysql
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - cdc

  pyspark:
    hostname: pyspark
    image: jupyter/pyspark-notebook
    ports:
      - "8888:8888" # Jupiter notebook
      - "4040:4040" # Spark UI
      - "9999:9999" # API endpoint
    volumes:
      - ./app:/home/jovyan/work
    networks:
      - cdc

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    networks:
      - cdc

  mysql:
    image: debezium/example-mysql:1.6
    hostname: mysql
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    volumes:
      - ./data/mysql_db_data:/var/lib/mysql
    networks:
      - cdc

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.8
    container_name: elasticsearch
#    restart: always
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - cdc

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.8
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    networks:
      - cdc
    depends_on:
      - elasticsearch
      
  community-app:
    image: openmf/community-app:latest
    container_name: mifos-ui
    restart: always
    ports:
      - 8880:80
    networks:
      - cdc
  #http://localhost:8880/?baseApiUrl=https://localhost:8443/fineract-provider&tenantIdentifier=default#/viewsavingaccount/1

volumes:
  es-data:
    driver: local

networks:
  cdc:
    driver: bridge
